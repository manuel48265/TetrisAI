import random
import src.utils.pieceForm as pieceForm
from collections import deque
from src.utils.pieceForm import pieces
from src.piece import Piece

class ShapeManager:
    """
    A class to manage the generation and manipulation of Tetris game pieces.

    This class is responsible for handling the available Tetris piece types, 
    generating random pieces, and providing methods to initialize and manage
    a sequence of Tetris pieces.

    Attributes:
        num_pieces (int): The total number of available Tetris piece types.
        pieces (list): A list of `pieceForm` objects representing the different Tetris shapes.

    Methods:
        get_random_piece() -> Piece:
            Returns a randomly selected Tetris piece from the list of available pieces.
        
        init_rand_deque(num_elements: int) -> deque:
            Generates a deque of `num_elements` randomly selected Tetris pieces.
        
        get_num_pieces() -> int:
            Returns the total number of available Tetris piece types.
        
        get_piece_set() -> list:
            Returns the list of available Tetris pieces (as `pieceForm` objects).
    """

    def __init__(self, num_pieces: int, pieces: list) -> None:
        """
        Initializes a ShapeManager object with a specified number of pieces
        and a list of available Tetris shapes.

        Args:
            num_pieces (int): The total number of available Tetris piece types.
            pieces (list): A list of `pieceForm` objects representing the different Tetris shapes.
        """
        self.num_pieces = num_pieces
        self.pieces = pieces

    def get_random_piece(self) -> Piece:
        """
        Returns a randomly selected Tetris piece from the list of available pieces.

        The piece is selected randomly from the list of `pieceForm` objects 
        and is then wrapped in a `Piece` object with initial coordinates (0, 0).

        Returns:
            Piece: A randomly chosen Tetris piece represented as a `Piece` object.
        """
        return Piece(0, 0, random.choice(self.pieces))

    def init_rand_deque(self, num_elements: int) -> deque:
        """
        Generates a deque of `num_elements` randomly selected Tetris pieces.

        This method creates a deque that contains `num_elements` randomly 
        selected Tetris pieces. Each piece is generated by calling `get_random_piece()`,
        and the deque is returned as the output.

        Args:
            num_elements (int): The number of pieces to include in the generated deque.

        Returns:
            deque: A deque containing `num_elements` randomly chosen Tetris pieces.
        """
        output = deque()
        for i in range(num_elements):
            output.append(self.get_random_piece())
        return output
    
    def get_num_pieces(self) -> int:
        """
        Returns the total number of available Tetris piece types.

        This method provides information about how many different types of 
        Tetris pieces are available in the game.

        Returns:
            int: The total number of available Tetris piece types.
        """
        return self.num_pieces
    
    def get_piece_set(self) -> list:
        """
        Returns the list of available Tetris pieces (as `pieceForm` objects).

        This method provides access to the complete set of Tetris pieces used
        in the game, represented as `pieceForm` objects.

        Returns:
            list: A list containing the `pieceForm` objects that represent Tetris shapes.
        """
        return self.pieces
# end ShapeManager